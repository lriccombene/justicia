<?php

namespace app\modules\apv1\models;

use yii\base\Model;
use yii\data\ActiveDataProvider;


/**
 * PostSearch represents the model behind the search form of `app\models\Post`.
 */
class OrdendetalleSearch extends \app\modules\apv1\models\Ordendetalle
{
  public $tipoestado;
  public $usuario;
  public $ordentrabajo;
  //public $nroorden;
    public function fields()
    {
        return parent::fields(); // TODO: Change the autogenerated stub
    }
//    public function fields()
//    {
//        return ['id','title','comments']; // TODO: Change the autogenerated stub
//    }


    /**
     * {@inheritdoc}
     */
//    public function rules()
//    {
//        return [
////            [['id', 'created_at', 'updated_at', 'created_by', 'updated_by'], 'integer'],
//            [['id','title', 'body','comments'], 'safe'],
//        ];
//    }



    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['id'], 'integer'],
            [['id','tipoestado','usuario','ordentrabajo','fecinicio','fecfinal','observaciones'], 'safe'],
        ];
    }


    /**
     * {@inheritdoc}
     */
//    public function scenarios()
//    {
//        // bypass scenarios() implementation in the parent class
//        return Model::scenarios();
//    }

    /**
     * Creates data provider instance with search query applied
     *
     * @param array $params
     *
     * @return ActiveDataProvider
     */
    public function search($params)
    {
        $query = Ordendetalle::find();
        $query->leftJoin( 'tipoestado', 'ordendetalle.id_tipoestado= tipoestado.id' );
                $query->leftJoin( 'ordentrabajo', 'ordendetalle.id_ordentrabajo= ordentrabajo.id' );
        $query->innerJoin( 'user', 'public.ordendetalle.id_usuario= public.user.id' );

       // add conditions that should always apply here

        $dataProvider = new ActiveDataProvider([
            'query' => $query,
        ]);

        $this->load($params,'');

        // grid filtering conditions
        $query->andFilterWhere(['id' => $this->id]);
        $query->andFilterWhere(['like','tipoestado.nombre',$this->tipoestado]);
        $query->andFilterWhere(['like','public.user.username',$this->usuario]);
        $query->andFilterWhere(['like','ordentrabajo.nro',$this->ordentrabajo]);
        $query->andFilterWhere(['like','fecinicio',$this->fecinicio]);
        $query->andFilterWhere(['like','fecfinal',$this->fecfinal]);
        $query->andFilterWhere(['like','observaciones',$this->observaciones]);


        return $dataProvider;
    }
}
